-- Copyright(c) Cragon. All rights reserved.
-- 钱包界面

---------------------------------------
ViewWallet = class(ViewBase)

---------------------------------------
function ViewWallet:ctor()
    self.TemporaryHideItemId = 14001
    self.MapShopGold = {}
    self.CtrlActor = self.ControllerMgr:GetController("Actor")
    self.CtrlWallet = self.ControllerMgr:GetController("Wallet")

    self.GTransShow = nil
    self.GCtrlTab = nil
    self.GBtnReturn = nil
    self.GBtnTabRecharge = nil
    self.GBtnTabWithdraw = nil
    self.GBtnTabRecord = nil
    self.GBtnCopyAddress = nil-- 按钮，复制Address到剪切板
    self.GBtnCopyMemo = nil-- 按钮，复制Memo到剪切板
    self.GTxtAddress = nil
    self.GTxtMemo = nil
    self.GComTabRecharge = nil
    self.GComTabWithdraw = nil
    self.GComTabRecord = nil
end

---------------------------------------
function ViewWallet:OnCreate()
    self:BindEvListener("EvEntityGoldChanged", self)
    self:BindEvListener("EvEntityDiamondChanged", self)

    --self.GListChip = self.ComUi:GetChild("ListChip").asList
    --local btn_getmoney = self.ComUi:GetChild("Lan_Btn_GetCash").asButton
    --btn_getmoney.onClick:Add(
    --        function()
    --            self:onClickBtnGetMoney()
    --        end
    --)

    --local com_input = self.ComUi:GetChild("ComPutIn").asCom
    --self.GComPutIn = com_input:GetChild("Num").asTextInput

    local com_tabtitle = self.ComUi:GetChild("ComTabTitle").asCom

    self.GTransShow = self.ComUi:GetTransition("TransitionShow")
    self.GTransShow:Play()

    self.GCtrlTab = self.ComUi:GetController("CtrlTab")

    self.GBtnReturn = self.ComUi:GetChild("BtnReturn").asButton
    self.GBtnReturn.onClick:Add(
            function()
                self:_onClickBtnReturn()
            end
    )

    self.GBtnTabRecharge = com_tabtitle:GetChild("BtnTabRecharge").asCom
    self.GBtnTabRecharge.onClick:Add(
            function()
                self:_onClickBtnTabRecharge()
            end)

    self.GBtnTabWithdraw = com_tabtitle:GetChild("BtnTabWithdraw").asCom
    self.GBtnTabWithdraw.onClick:Add(
            function()
                self:_onClickBtnTabWithdraw()
            end)

    self.GBtnTabRecord = com_tabtitle:GetChild("BtnTabRecord").asCom
    self.GBtnTabRecord.onClick:Add(
            function()
                self:_onClickBtnTabRecord()
            end)

    self.GComTabRecharge = self.ComUi:GetChild("ComTabRecharge").asCom
    self.GComTabWidthdraw = self.ComUi:GetChild("ComTabWithdraw").asCom
    self.GComTabRecord = self.ComUi:GetChild("ComTabRecord").asCom

    local gloader_qrcode = self.GComTabRecharge:GetChild('LoaderQRCode').asLoader
    --Native:CreateShareUrlAndQRCode(ActorId)
    local url = 'https://www.cragon.cn/gpdz.html?PlayerId=' .. 10000
    local t = CS.UnityEngine.Texture2D(256, 256)
    local colors = self.CasinosContext.LuaMgr:CreateQRCode(url, t.width, t.height)
    t:SetPixels32(colors)
    t:Apply()
    --local texture = CS.UnityEngine.Texture2D(190, 190)
    --texture:SetPixels(t:GetPixels(32, 32, 190, 190))
    --texture:Apply()
    --local rect = CS.UnityEngine.Rect(0, 0, 300, 300)
    gloader_qrcode.texture = CS.FairyGUI.NTexture(t)

    self.GTxtAddress = self.GComTabRecharge:GetChild("TextAddress").asTextField
    self.GTxtMemo = self.GComTabRecharge:GetChild("TextMemo").asTextField

    self.GBtnCopyAddress = self.GComTabRecharge:GetChild("BtnCopyAddress").asCom
    self.GBtnCopyAddress.onClick:Add(
            function()
                self:_onClickBtnCopyAddress()
            end)

    self.GBtnCopyMemo = self.GComTabRecharge:GetChild("BtnCopyMemo").asCom
    self.GBtnCopyMemo.onClick:Add(
            function()
                self:_onClickBtnCopyMemo()
            end)

    self:createChip()

    local btn_addchip = self.ComUi:GetChild("BtnAddChip").asButton
    self.GTextSelfGold = btn_addchip:GetChild("TextChipAmount").asTextField
    local btn_adddiamond = self.ComUi:GetChild("BtnAddDiamond").asButton
    self.GTextSelfDiamond = btn_adddiamond:GetChild("TextDiamondAmount").asTextField
    self:SetPlayerGoldAndDiamond()

    local bg = self.ComUi:GetChild("Bg")
    if (bg ~= nil) then
        ViewHelper:MakeUiBgFiteScreen(ViewMgr.STANDARD_WIDTH, ViewMgr.STANDARD_HEIGHT, self.ComUi.width, self.ComUi.height, bg.width, bg.height, bg, BgAttachMode.Center)
    end

    self:_onClickBtnTabRecharge()

    self.CtrlWallet:RequestVCoinGetOrGenerateAddress()
    self.CtrlWallet:RequestVCoinGetVCoinMyInfo()
    self.CtrlWallet:RequestVCoinWithdraw()
    self.CtrlWallet:RequestVCoinWithdrawAddressValid()
    self.CtrlWallet:RequestVCoinGetTransList()
end

---------------------------------------
function ViewWallet:OnDestroy()
    self.GBtnReturn.onClick:Clear()
    self.GBtnTabRecharge.onClick:Clear()
    self.GBtnTabWithdraw.onClick:Clear()

    self:UnbindEvListener(self)
end

---------------------------------------
function ViewWallet:OnHandleEv(ev)
    if (ev.EventName == "EvEntityGoldChanged") then
        self:SetPlayerGoldAndDiamond()
    elseif (ev.EventName == "EvEntityDiamondChanged") then
        self:SetPlayerGoldAndDiamond()
    end
end

---------------------------------------
-- 交易通知
function ViewWallet:OnVCoinTransNotify(result, record)
    print('ViewWallet:OnVCoinTransNotify() Result=' .. result)
    if record ~= nil then
        local l_tm = CS.System.DateTime.Parse(record.Dt)
        local dt = CS.Casinos.UiHelper.getLocalTmToString(l_tm)
        print(string.format('Record Id=%s ChargeOrWithdraw=%s Currency=%s Volume=%s Dt=%s WithdrawStatus=%s',
                record.Id, record.ChargeOrWithdraw, record.Currency, record.Volume, dt, record.WithdrawStatus))
    end
end

---------------------------------------
-- 获取虚拟币地址通知
function ViewWallet:OnVCoinGetOrGenerateAddressNotify(vcoin_getorgenerate_address_notify)
    print('ViewWallet:OnVCoinGetOrGenerateAddressNotify()')
    print(string.format('Currency=%s Address=%s Memo=%s',
            vcoin_getorgenerate_address_notify.Currency, vcoin_getorgenerate_address_notify.Address, vcoin_getorgenerate_address_notify.Memo))

    -- 设置二维码
    local gloader_qrcode = self.GComTabRecharge:GetChild('LoaderQRCode').asLoader
    local url = self.CtrlWallet.Address
    local t = CS.UnityEngine.Texture2D(256, 256)
    local colors = self.CasinosContext.LuaMgr:CreateQRCode(url, t.width, t.height)
    t:SetPixels32(colors)
    t:Apply()
    gloader_qrcode.texture = CS.FairyGUI.NTexture(t)

    -- 设置Text Address&Memo
    self.GTxtAddress.text = self.CtrlWallet.Address
    self.GTxtMemo.text = self.CtrlWallet.Memo
end

---------------------------------------
-- 验证提现地址有效性通知
function ViewWallet:OnVCoinWithdrawAddressValidNotify(wallet_withdrawaddressvalid_notify)
    print('ViewWallet:OnVCoinWithdrawAddressValidNotify()')
    print(string.format('Address=%s Memo=%s IsValid=%s',
            wallet_withdrawaddressvalid_notify.Address, wallet_withdrawaddressvalid_notify.Memo, wallet_withdrawaddressvalid_notify.IsValid))
end

---------------------------------------
-- 获取交易记录通知
function ViewWallet:OnVCoinGetTransListNotify()
    print('ViewWallet:OnVCoinGetTransListNotify()')

    if self.CtrlWallet.ListRecord ~= nil then
        for i, v in pairs(self.CtrlWallet.ListRecord) do
            local l_tm = CS.System.DateTime.Parse(v.Dt)
            local dt = CS.Casinos.UiHelper.getLocalTmToString(l_tm)
            print(string.format('Record Id=%s ChargeOrWithdraw=%s Currency=%s Volume=%s Dt=%s WithdrawStatus=%s',
                    v.Id, v.ChargeOrWithdraw, v.Currency, v.Volume, dt, v.WithdrawStatus))
        end
    end
end

---------------------------------------
-- 响应获取本人VCoin信息
function ViewWallet:OnVCoinGetMyVCoinInfoResponse()
    print('ViewWallet:OnVCoinGetMyVCoinInfoResponse()')

    if self.CtrlWallet.VCoinMyInfo ~= nil and self.CtrlWallet.VCoinMyInfo.ListItem ~= nil and #self.CtrlWallet.VCoinMyInfo.ListItem > 0 then
        for i, v in pairs(self.CtrlWallet.VCoinMyInfo.ListItem) do
            print(string.format('Currency=%s Address=%s Memo=%s', v.Currency, v.Address, v.Memo))
        end
    end
end

---------------------------------------
function ViewWallet:ShowTabGold()
    self:onClickBtnTabChip()
end

---------------------------------------
function ViewWallet:SetPlayerGoldAndDiamond()
    self.GTextSelfGold.text = UiChipShowHelper:GetGoldShowStr(self.CtrlActor.PropGoldAcc:get(), self.ViewMgr.LanMgr.LanBase)
    self.GTextSelfDiamond.text = UiChipShowHelper:GetGoldShowStr(self.CtrlActor.PropDiamond:get(), self.ViewMgr.LanMgr.LanBase, false)
end

---------------------------------------
function ViewWallet:_onClickBtnReturn()
    self.ViewMgr:DestroyView(self)
end

---------------------------------------
function ViewWallet:onClickBtnGetMoney()
    --local n = tonumber(self.GComPutIn.text)
    --if (n == nil) then
    --    ViewHelper:UiShowInfoFailed(self.ViewMgr.LanMgr:getLanValue("EnterNumTips"))
    --    return
    --end
    --
    --local ev = self:GetEv("EvUiRequestGetMoney")
    --if (ev == nil) then
    --    ev = EvUiRequestGetMoney:new(nil)
    --end
    --ev.GetMoneyNum = n
    --self:SendEv(ev)
end

---------------------------------------
function ViewWallet:_onClickBtnTabRecharge()
    local gctrl_tabrecharge_state = self.GBtnTabRecharge:GetController("CtrlState")
    gctrl_tabrecharge_state.selectedIndex = 1
    local gctrl_tabwithdraw_state = self.GBtnTabWithdraw:GetController("CtrlState")
    gctrl_tabwithdraw_state.selectedIndex = 0
    local gctrl_tabrecord_state = self.GBtnTabRecord:GetController("CtrlState")
    gctrl_tabrecord_state.selectedIndex = 0

    self.GCtrlTab.selectedIndex = 0
end

---------------------------------------
function ViewWallet:_onClickBtnTabWithdraw()
    local gctrl_tabrecharge_state = self.GBtnTabRecharge:GetController("CtrlState")
    gctrl_tabrecharge_state.selectedIndex = 0
    local gctrl_tabwithdraw_state = self.GBtnTabWithdraw:GetController("CtrlState")
    gctrl_tabwithdraw_state.selectedIndex = 1
    local gctrl_tabrecord_state = self.GBtnTabRecord:GetController("CtrlState")
    gctrl_tabrecord_state.selectedIndex = 0

    self.GCtrlTab.selectedIndex = 1
end

---------------------------------------
function ViewWallet:_onClickBtnTabRecord()
    local gctrl_tabrecharge_state = self.GBtnTabRecharge:GetController("CtrlState")
    gctrl_tabrecharge_state.selectedIndex = 0
    local gctrl_tabwithdraw_state = self.GBtnTabWithdraw:GetController("CtrlState")
    gctrl_tabwithdraw_state.selectedIndex = 0
    local gctrl_tabrecord_state = self.GBtnTabRecord:GetController("CtrlState")
    gctrl_tabrecord_state.selectedIndex = 1

    self.GCtrlTab.selectedIndex = 2
end

---------------------------------------
-- 点击按钮，复制Address到剪切板
function ViewWallet:_onClickBtnCopyAddress()
    if self.CtrlWallet.Address ~= nil and string.len(self.CtrlWallet.Address) > 0 then
        self.CasinosContext.LuaMgr:SetClipBoard(self.CtrlWallet.Address)
        local address = self.CasinosContext.LuaMgr:GetClipBoard()
        ViewHelper:UiShowInfoSuccess('已将' .. tostring(address) .. '复制到剪切板')
    else
        ViewHelper:UiShowInfoSuccess('Address为空，无需复制')
    end
end

---------------------------------------
-- 点击按钮，复制Memo到剪切板
function ViewWallet:_onClickBtnCopyMemo()
    if self.CtrlWallet.Memo ~= nil and string.len(self.CtrlWallet.Memo) > 0 then
        self.CasinosContext.LuaMgr:SetClipBoard(self.CtrlWallet.Memo)
        local memo = self.CasinosContext.LuaMgr:GetClipBoard()
        ViewHelper:UiShowInfoSuccess('已将' .. tostring(memo) .. '复制到剪切板')
    else
        ViewHelper:UiShowInfoSuccess('Memo为空，无需复制')
    end
end

---------------------------------------
function ViewWallet:createChip()
    if (LuaHelper:GetTableCount(self.MapShopGold) > 0) then
        return
    end
    local map_tbitem = self.CasinosContext.TbDataMgrLua:GetMapData("Item")
    for key, value in pairs(map_tbitem) do
        local tb_item = value
        if (tb_item.UnitType == "Billing") then
            local tb_itemtype = self.CasinosContext.TbDataMgrLua:GetData("ItemType", tb_item.ItemTypeTbId)
            if (tb_itemtype.TypeName == "Gold") then
                local co_gold = self.GListChip:AddItemFromPool().asCom
                local ui_diamond = ItemUiPurseGold:new(nil, self, co_gold, tb_item)
                self.MapShopGold[key] = ui_diamond
            end
        end
    end
end

---------------------------------------
ViewWalletFactory = class(ViewFactory)

---------------------------------------
function ViewWalletFactory:CreateView()
    local view = ViewWallet.new()
    return view
end