-- Copyright (c) Cragon. All rights reserved.

---------------------------------------
Native = {}

---------------------------------------
function Native:Setup(view_mgr, listner)
    self.Context = Context
    self.CasinosContext = CS.Casinos.CasinosContext.Instance
    self.ViewMgr = view_mgr
    self.Listner = listner

    if self.CasinosContext.IsEditor == false then
        CS.ThirdPartyLogin.Instantce():initLogin(self.Context.Cfg.WeChatAppId)
        --CS.Push.Instant():initPush(self.Context.Cfg.PushAppId, self.Context.Cfg.PushAppKey, self.Context.Cfg.PushAppSecret)
    end

    --CS.ShareSDKReceiver.instance(self.Context.Cfg.ShareSDKAppKey, self.Context.Cfg.ShareSDKAppSecret)
    --CS.ShareSDKReceiver.mShareSDK.devInfo = CS.cn.sharesdk.unity3d.DevInfoSet()
    --CS.ShareSDKReceiver.mShareSDK.devInfo.wechat = CS.cn.sharesdk.unity3d.WeChat()
    --if CS.Casinos.CasinosContext.Instance.UnityAndroid then
    --    CS.ShareSDKReceiver.mShareSDK.devInfo.wechat.AppId = self.Context.Cfg.WeChatAppId
    --    CS.ShareSDKReceiver.mShareSDK.devInfo.wechat.AppSecret = self.Context.Cfg.WeChatAppSecret
    --    CS.ShareSDKReceiver.mShareSDK.devInfo.wechat.BypassApproval = false
    --elseif CS.Casinos.CasinosContext.Instance.UnityIOS then
    --    CS.ShareSDKReceiver.mShareSDK.devInfo.wechat.app_id = self.Context.Cfg.WeChatAppId
    --    CS.ShareSDKReceiver.mShareSDK.devInfo.wechat.app_secret = self.Context.Cfg.WeChatAppSecret
    --end

    --CS.ShareSDKReceiver.mShareSDK:init()

    --local open_install = CS.OpenInstallReceiver.instance()
    --open_install.OpenInstallResultCallBack = function(result, is_install)
    --    self:OpenInstallResult(result, is_install)
    --end
    --CS.OpenInstall.Instant()

    self.PlayerQRCodeTexture = CS.UnityEngine.Texture2D(190, 190)
    self.ShareUrl = nil

    --CS.Pay.Instant()
    --if CS.Casinos.CasinosContext.Instance.IsEditor == false then
    --    local secrete = self.Context.Cfg.BeeCloudLiveSecret
    --    if self.Context.Cfg.PayUseTestMode then
    --        secrete = self.Context.Cfg.BeeCloudTestSecret
    --    end
    --    CS.Pay.payInit(self.Context.Cfg.BeeCloudId, secrete, self.Context.Cfg.WeChatAppId)
    --    CS.Pay.useTestMode(self.Context.Cfg.PayUseTestMode)
    --end

    self.CasinosContext.NativeAPIMsgReceiverListner.ActionGetPicSuccess = function(getpic_result)
        self:ActionGetPicSuccess(getpic_result)
    end
    self.CasinosContext.NativeAPIMsgReceiverListner.ActionGetPicSuccessWithBytes = function(pic_data)
        self:ActionGetPicSuccessWithBytes(pic_data)
    end
    --self.CasinosContext.NativeAPIMsgReceiverListner.ActionPayWithIAPFailed = function(result)
    --    self:ActionPayWithIAPFailed(result)
    --end
    --self.CasinosContext.NativeAPIMsgReceiverListner.ActionPayWithIAPSuccess = function(purchase)
    --    self:ActionPayWithIAPSuccess(purchase)
    --end
    self.CasinosContext.NativeAPIMsgReceiverListner.ActionPayResult = function(pay_result)
        self:ActionPayResult(pay_result)
    end
    self.CasinosContext.NativeAPIMsgReceiverListner.ActionLoginFailed = function(fail_type)
        self:ActionLoginFailed(fail_type)
    end
    self.CasinosContext.NativeAPIMsgReceiverListner.ActionLoginSuccess = function(param, real_token)
        self:ActionLoginSuccess(param, real_token)
    end
end

---------------------------------------
function Native:ShareContent(platform_type, text, pic_path, title, url, share_type)
    local share_content = CS.cn.sharesdk.unity3d.ShareContent()
    share_content:SetText(text)
    share_content:SetImagePath(pic_path)--"http://ww3.sinaimg.cn/mw690/be159dedgw1evgxdt9h3fj218g0xctod.jpg"
    share_content:SetTitle(title)
    share_content:SetUrl(url)--http://qjsj.youzu.com/jycs/
    share_content:SetShareType(share_type)
    CS.ShareSDKReceiver.mShareSDK:ShareContent(platform_type, share_content)
end

---------------------------------------
function Native:GetMobId(player_id)
    local c = CS.System.Collections.Hashtable()
    c:Add("PlayerId", player_id)
    local scene = CS.com.moblink.unity3d.MobLinkScene("", "", c)
    if CS.Casinos.CasinosContext.Instance.IsEditor == false then
        CS.com.moblink.unity3d.MobLink.getMobId(scene, function(mob_id)
            self:OnMobIdHandler(mob_id)
        end)
    end
end

---------------------------------------
function Native:OnMobIdHandler(mobid)
    self.ShareUrl = 'https://www.cragon.cn/gpdz.html?mobid=' .. mobid
    local t = CS.UnityEngine.Texture2D(256, 256)
    local colors = self.CasinosContext.LuaMgr:CreateQRCode(self.ShareUrl, t.width, t.height)
    t:SetPixels32(colors)
    t:Apply()
    self.PlayerQRCodeTexture:SetPixels(t:GetPixels(32, 32, 190, 190))
    self.PlayerQRCodeTexture:Apply()
end

---------------------------------------
function Native:CreateShareUrlAndQRCode(player_id)
    self.ShareUrl = 'https://www.cragon.cn/gpdz.html?PlayerId=' .. player_id
    local t = CS.UnityEngine.Texture2D(256, 256)
    local colors = self.CasinosContext.LuaMgr:CreateQRCode(self.ShareUrl, t.width, t.height)
    t:SetPixels32(colors)
    t:Apply()
    self.PlayerQRCodeTexture:SetPixels(t:GetPixels(32, 32, 190, 190))
    self.PlayerQRCodeTexture:Apply()
end

---------------------------------------
function Native:OnRestoreScene(scene)
    local params = scene.customParams
    if params == nil then
        return
    end

    local player_id = CS.Casinos.LuaHelper.GetHashTableValue(params, "PlayerId") --params["PlayerId"]
    local invite_payerid = "InvitePlayerId"
    if (CS.UnityEngine.PlayerPrefs.HasKey(invite_payerid) == false) then
        local t = {}
        t["PlayerId"] = player_id
        t["IsNew"] = true
        local t_encode = self.Listner.Json.encode(t)
        --print("t_encode  " .. t_encode)
        CS.UnityEngine.PlayerPrefs.SetString(invite_payerid, t_encode)
    end
end

---------------------------------------
function Native:OpenInstallResult(result, is_install)
    if CS.System.String.IsNullOrEmpty(result) then
        return
    end

    if is_install then
        local t_result = self.Listner.Json.decode(result)
        local data = t_result["Data"]
        local channel_code = t_result["ChannelCode"]
        local invite_payerid = "InvitePlayerId"
        if (CS.UnityEngine.PlayerPrefs.HasKey(invite_payerid) == false) then
            local player_id = data["PlayerId"]
            if player_id ~= nil then
                local t = {}
                t["PlayerId"] = player_id
                t["IsNew"] = true
                local t_encode = self.Listner.Json.encode(t)
                CS.UnityEngine.PlayerPrefs.SetString(invite_payerid, t_encode)
            end
        end
    else
    end
end

---------------------------------------
function Native:ActionGetPicSuccess(getpic_result)
    ViewHelper:UiEndWaiting()
    if (CS.System.String.IsNullOrEmpty(getpic_result) == false) then
        ViewHelper:UiBeginWaiting(self.ViewMgr.LanMgr:GetLanValue("UploadPic"), 5)
    end
end

---------------------------------------
function Native:ActionGetPicSuccessWithBytes(pic_data)
    local ev = self.ViewMgr:GetEv("EvGetPicSuccess")
    if (ev == nil) then
        ev = EvGetPicSuccess:new(nil)
    end
    ev.pic_data = pic_data
    self.ViewMgr:SendEv(ev)
end

---------------------------------------
function Native:ActionPayWithIAPFailed(result)
    ViewHelper:UiShowInfoFailed(self.ViewMgr.LanMgr:GetLanValue("BuyFail") .. result)
end

---------------------------------------
function Native:ActionPayWithIAPSuccess(purchase)
    local ev = self.ViewMgr:GetEv("EvPayWithIAPSuccess")
    if (ev == nil) then
        ev = EvPayWithIAPSuccess:new(nil)
    end
    ev.purchase = purchase
    self.ViewMgr:SendEv(ev)
end

---------------------------------------
function Native:ActionPayResult(pay_result)
    if (pay_result.Length <= 0) then
        ViewHelper:UiShowInfoFailed(self.ViewMgr.LanMgr:GetLanValue("BuyItemFailed"))
        return
    else
        local real_result = pay_result[0]
        if real_result == "success" then
            ViewHelper:UiShowInfoSuccess(self.ViewMgr.LanMgr:GetLanValue("PaySuccess"))
        elseif real_result == "fail" then
            ViewHelper:UiShowInfoFailed(self.ViewMgr.LanMgr:GetLanValue("PayFailed"))
        elseif real_result == "cancel" then
            ViewHelper:UiShowInfoFailed(self.ViewMgr.LanMgr:GetLanValue("PayCanceled"))
        elseif real_result == "invalid" then
            ViewHelper:UiShowInfoFailed(self.ViewMgr.LanMgr:GetLanValue("PayAppNotInstall"))
        elseif real_result == "unknown" then
            ViewHelper:UiShowInfoFailed(self.ViewMgr.LanMgr:GetLanValue("PayUnknownError"))
        end
    end
end

---------------------------------------
function Native:ActionLoginFailed(fail_type)
    ViewHelper:UiEndWaiting()
    local tips = ""
    if fail_type == "ERR_COMM" then
        tips = Native.ViewMgr.LanMgr:GetLanValue("ERRCOMM")
    elseif fail_type == "ERR_USER_CANCEL" then
        tips = Native.ViewMgr.LanMgr:GetLanValue("ERRUSERCANCEL")
    elseif fail_type == "ERR_SENT_FAILED" then
        tips = Native.ViewMgr.LanMgr:GetLanValue("ERRSENTFAILED")
    elseif fail_type == "ERR_AUTH_DENIED" then
        tips = Native.ViewMgr.LanMgr:GetLanValue("ERRAUTHDENIED")
    elseif fail_type == "ERR_UNSUPPORT" then
        tips = Native.ViewMgr.LanMgr:GetLanValue("ERRUNSUPPORT")
    elseif fail_type == "ERR_NOTINSTALLEDWECHAT" then
        self.Context.Cfg.ClientWechatIsInstalled = false
    else
        if fail_type == "-2" then
            tips = Native.ViewMgr.LanMgr:GetLanValue("ERRUSERCANCEL")
        else
            local t = Native.ViewMgr.LanMgr:GetLanValue("ERRUNKNOWN")
            tips = string.format(t, fail_type)
        end
    end
    if (CS.System.String.IsNullOrEmpty(tips) == false) then
        ViewHelper:UiShowPermanentPosMsg(tips)
    end
end

---------------------------------------
function Native:ActionLoginSuccess(param, real_token)
    if (param == "Login") then
        local ev = self.ViewMgr:GetEv("EvUiLoginSuccessEx")
        if (ev == nil) then
            ev = EvUiLoginSuccessEx:new(nil)
        end
        ev.token = real_token
        self.ViewMgr:SendEv(ev)
    end
end