-- Copyright(c) Cragon. All rights reserved.

---------------------------------------
-- 配置，Launch
LaunchConfig = {
    CasinosContext = CS.Casinos.CasinosContext.Instance;
    LuaMgr = CS.Casinos.CasinosContext.Instance.LuaMgr;
    Env = 'Pro';
    CurrentLan = 'ChineseSimplified';
    CommonVersion = nil;
    DataVersion = nil
}

function LaunchConfig:Setup()
    -- 获取Env值
    local env_key = "Env"
    if (CS.UnityEngine.PlayerPrefs.HasKey(env_key) == true) then
        self.Env = CS.UnityEngine.PlayerPrefs.GetString(env_key)
    end

    -- 获取CurrentLan值
    local lan_key = "LanKey"
    if (CS.UnityEngine.PlayerPrefs.HasKey(lan_key) == true) then
        self.CurrentLan = CS.UnityEngine.PlayerPrefs.GetString(lan_key)
    else
        self.CurrentLan = self.LuaMgr:GetSystemLanguageAsString()
    end
end

---------------------------------------
Launch = {
    LaunchCfg = LaunchConfig;
    PreViewMgr = nil;
    PreLoading = nil;
    PreMsgBox = nil;
    CasinosContext = CS.Casinos.CasinosContext.Instance;
    LuaMgr = CS.Casinos.CasinosContext.Instance.LuaMgr;
    Context = nil;
    UIPackagePreLoading = nil;
    UIPackageMsgbox = nil
}

---------------------------------------
-- 初始化
function Launch:Setup()
    self.LaunchCfg:Setup()

    require 'PreViewMgr'
    require 'PreViewBase'
    require 'PreViewFactory'
    require 'PreViewLoading'
    require 'PreViewMsgBox'

    ParticleHelper:new(nil)
    self.PreViewMgr = PreViewMgr
    self.PreViewMgr:Init()

    self.UIPackagePreLoading = self:_addUiPackage("PreLoading")
    self.UIPackagePreMsgbox = self:_addUiPackage("PreMsgBox")

    self.PreLoading = self.PreViewMgr:CreateView("PreLoading")

    local tips = "正在努力加载配置，请耐心等待..."
    local lan = self.LaunchCfg.CurrentLan
    if (lan == "English") then
        tips = "Try to loading the config,please wait..."
    else
        if (lan == "Chinese" or lan == "ChineseSimplified") then
            tips = "正在努力加载配置，请耐心等待..."
        end
    end
    self.PreLoading:UpdateDesc(tips)

    -- 下载并加载bundle_xxx.txt
    local lua_pkg_name = string.format('bundle_%s', self.CasinosContext.Config.VersionBundle)
    local http_url_bundlexxx = string.format('https://cragon-king-oss.cragon.cn/%s/%s.txt', self.CasinosContext.Config.Platform, lua_pkg_name)
    --print(http_url_bundlexxx)
    self.LuaMgr:WWWLoadTextAsync(http_url_bundlexxx,
            function(text)
                self.LuaMgr:LoadLuaFromBytes(lua_pkg_name, text)
                self.LuaMgr:DoString(lua_pkg_name)

                -- 下载并加载Context.txt
                self.LaunchCfg.CommonVersion = CommonSelectPro
                self.LaunchCfg.DataVersion = DataSelectPro
                if (self.LaunchCfg.Env == 'Dev') then
                    self.LaunchCfg.CommonVersion = CommonSelectDev
                    self.LaunchCfg.DataVersion = DataSelectDev
                end
                local http_url_context = string.format('https://cragon-king-oss.cragon.cn/Common/%s/Lua/Context.txt', self.LaunchCfg.CommonVersion)
                --print(http_url_context)
                self.LuaMgr:WWWLoadTextAsync(http_url_context,
                        function(text)
                            self.LuaMgr:LoadLuaFromBytes('Context', text)
                            require('Context')
                            self.Context = Context
                            Context:Init()
                        end
                )
            end
    )
end

---------------------------------------
-- Launch阶段完成
function Launch:Finish()
    if (self.PreLoading ~= nil) then
        self.PreViewMgr:DestroyView(self.PreLoading)
        self.PreLoading = nil
    end
end

---------------------------------------
-- 应用程序退出
function Launch:Close()
    self:Finish()

    if (self.Context ~= nil) then
        self.Context:Release()
        self.Context = nil
    end

    self.CasinosContext = nil
    self.LuaMgr = nil
    self.Instance = nil
end

---------------------------------------
-- 更新加载界面进度条进度
function Launch:UpdateViewLoadingProgress(cur, max)
    self.PreLoading:UpdateLoadingProgress(cur, max)
end

---------------------------------------
-- 更新加载界面进度条描述
function Launch:UpdateViewLoadingDesc(desc)
    self.PreLoading:UpdateDesc(desc)
end

---------------------------------------
-- 更新加载界面进度条描述和进度
function Launch:UpdateViewLoadingDescAndProgress(desc, cur, max)
    self.PreLoading:UpdateDesc(desc)
    self.PreLoading:UpdateLoadingProgress(cur, max)
end

---------------------------------------
-- App暂停，恢复运行
function Launch:OnApplicationPause(pause)
    --print('OnApplicationPause, Pause=' .. tostring(pause))
    if (self.Context ~= nil) then
    else
    end
end

---------------------------------------
-- App获取，失去焦点
function Launch:OnApplicationFocus(focus_state)
    --print('OnApplicationFocus, FocusState=' .. tostring(focus_state))
    if (self.Context ~= nil) then
    else
    end
end

---------------------------------------
-- Android的退出确认
function Launch:OnAndroidQuitConfirm()
    local view_premsgbox = self.PreViewMgr:GetView("PreMsgBox")
    if (view_premsgbox == nil) then
        view_premsgbox = self.PreViewMgr:CreateView("PreMsgBox")
    end
    view_premsgbox:showMsgBox('确认退出吗',
            function()
                self.PreViewMgr:DestroyView(view_premsgbox)
                CS.UnityEngine.Application.Quit()
            end,
            function()
                self.PreViewMgr:DestroyView(view_premsgbox)
            end
    )
end

---------------------------------------
function Launch:OnSocketClose()
    if (self.Context ~= nil) then
        self.Context:OnSocketClose()
    else
        print('OnSocketClose()')
    end
end

---------------------------------------
-- FairyGUI.AddPackage
function Launch:_addUiPackage(name)
    if (self.CasinosContext.PathMgr.DirLaunchAbType == CS.Casinos.DirType.Raw) then
        local path_ab = self.CasinosContext.PathMgr.DirLaunchAb .. string.lower(name) .. ".ab"
        local ab = CS.UnityEngine.AssetBundle.LoadFromFile(path_ab)
        local ui_package = CS.FairyGUI.UIPackage.AddPackage(ab)
        return ui_package
    else
        local path_ab = self.CasinosContext.PathMgr.DirLaunchAb .. string.lower(name) .. "/" .. string.lower(name)
        local ui_package = CS.FairyGUI.UIPackage.AddPackage(path_ab)
        return ui_package
    end
end