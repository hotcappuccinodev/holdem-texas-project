-- Copyright(c) Cragon. All rights reserved.

---------------------------------------
DesktopHModuleTexas = class(DesktopHModuleBase)

function DesktopHModuleTexas:ctor(controller_desktoph, factory_name)
    self.MapTbGoldPercent = {}
    self.MaxTbGoldPercent = {}
    self.ListOperate = {}
    self.ListOperateId = {}

    self.MapTbGoldPercent = self.Context.TbDataMgr:GetMapData("CfigTexasDesktopHGoldPercent")
    local max_percent = 0
    for k, v in pairs(self.MapTbGoldPercent) do
        if (v.GoldPercent > max_percent) then
            max_percent = v.GoldPercent
            self.MaxTbGoldPercent = v
        end
    end

    local map_tbdesktophoperate = self.Context.TbDataMgr:GetMapData("DesktopHBetOperateTexas")
    for k, v in pairs(map_tbdesktophoperate) do
        self.ListOperate[v] = v
    end

    for k, v in pairs(self.ListOperate) do
        self.ListOperateId[v.Id] = v.Id
    end
end

---------------------------------------
function DesktopHModuleTexas:OnDestroy()
end

---------------------------------------
function DesktopHModuleTexas:OnHandleEvent(ev)
end

---------------------------------------
function DesktopHModuleTexas:InitDesktopH(desktoph_data)
end

---------------------------------------
function DesktopHModuleTexas:refreshDesktopH(desktoph_data)
end

---------------------------------------
function DesktopHModuleTexas:SeatPlayerChanged(sitdown_data)
end

---------------------------------------
function DesktopHModuleTexas:BankPlayerChanged()
end

---------------------------------------
function DesktopHModuleTexas:DesktopHChat(msg)
    local m = ChatMsg:new(nil)
    m:setData(msg)
    if (CS.System.String.IsNullOrEmpty(m.sender_guid)) then
        return
    end
    self.ControllerDesktopH:addDesktopMsg(m.sender_guid, m.sender_nickname, m.sender_viplevel, m.msg)
end

---------------------------------------
function DesktopHModuleTexas:getMaxBetpotIndex()
    local map_betpotindex = self.Context.TbDataMgr:GetMapData("DesktopHBetPotTexas")
    local l = LuaHelper:GetTableCount(map_betpotindex)
    --local sort_result = map_betpotindex.OrderByDescending(x => x.Key).ToList()
    return map_betpotindex[l - 1].Id
end

---------------------------------------
function DesktopHModuleTexas:getBetOperateId()
    return self.ListOperateId
end

---------------------------------------
function DesktopHModuleTexas:getMaxGoldPecent()
    return self.MaxTbGoldPercent.GoldPercent
end

---------------------------------------
function DesktopHModuleTexas:getMaxCannotBetPecent()
    local bet_percent = TbDataHelper:GetCommonValue("DesktopHMaxBetPercentTexas")
    return bet_percent
end

---------------------------------------
function DesktopHModuleTexas:getOperateGold(operate_id)
    local bet_operate = self.Context.TbDataMgr:GetData("DesktopHBetOperateTexas", operate_id)
    return bet_operate.OperateGolds
end

---------------------------------------
function DesktopHModuleTexas:getWinOrLoosePercent(card_type)
    local percent = 0
    local type = CS.Casinos.LuaHelper.ProtobufDeserializeHandRankTypeTexasH(card_type)
    for k, v in pairs(self.MapTbGoldPercent) do
        if (v.HandRankTypeTexasH == type) then
            percent = v.GoldPercent
            break
        end
    end
    return percent
end

---------------------------------------
function DesktopHModuleTexas:getGameReusltTips(is_win, card_type_me, card_type_banker, self_betgolds)
    --local s = string.format('本人牌型=%s, 庄家牌型=%s', card_type_me, card_type_banker)
    --print(s)

    if self_betgolds == 0 then
        local self_betresult = self.ControllerDesktopH.LanMgr:GetLanValue("NotBet")
        return self_betresult
    else
        if is_win == true then
            -- 本人赢
            return '+' .. tostring(self_betgolds)
        else
            -- 本人输
            return '-' .. tostring(self_betgolds)
        end
    end
end

---------------------------------------
function DesktopHModuleTexas:GetCardTypeStr(list_card)
    local cardtype_texas = CS.Casinos.CardTypeHelperTexas.GetHandRankHTexas(list_card)
    return CS.Casinos.LuaHelper.ParseHandRankTypeTexasHToStr(cardtype_texas)
end

---------------------------------------
function DesktopHModuleTexas:GetCardTypeByte(list_card)
    local cardtype_texas = CS.Casinos.CardTypeHelperTexas.GetHandRankHTexas(list_card)
    return CS.Casinos.LuaHelper.ParseHandRankTypeTexasHToNum(cardtype_texas)
end

---------------------------------------
DesktopHModuleFactoryTexas = class(DesktopHModuleFactory)

function DesktopHModuleFactoryTexas:GetName()
    return "Texas"
end

function DesktopHModuleFactoryTexas:CreateModule(controller_desktoph, factory_name)
    local t = DesktopHModuleTexas.new(controller_desktoph, factory_name)
    return t
end        