-- Copyright(c) Cragon. All rights reserved.

---------------------------------------
ParticleHelper = {}

---------------------------------------
function ParticleHelper:new(o)
    o = o or {}
    setmetatable(o, self)
    self.__index = self
    if (self.Instance == nil) then
        self.Instance = o
        self.CasinosContext = CS.Casinos.CasinosContext.Instance
        self.TableParticle = {}
    end
    return self.Instance
end

---------------------------------------
function ParticleHelper:GetParticel(path)
    local particle = self.TableParticle[path]
    if (particle == nil) then
        local particle_path = self.CasinosContext.PathMgr.DirAbParticle .. path
        particle = CS.UnityEngine.AssetBundle.LoadFromFile(particle_path)
        self.TableParticle[path] = particle
    end
    return particle
end

---------------------------------------
PreViewLoading = PreViewBase:new()

---------------------------------------
function PreViewLoading:new(o)
    o = o or {}
    setmetatable(o, self)
    self.__index = self
    self.ViewMgr = nil
    self.GoUi = nil
    self.ComUi = nil
    self.Panel = nil
    self.UILayer = nil
    self.InitDepth = nil
    self.ViewKey = nil
    self.ShowSpine = true
    self.Launch = Launch
    self.CasinosContext = CS.Casinos.CasinosContext.Instance
    self.LuaMgr = CS.Casinos.CasinosContext.Instance.LuaMgr
    if (self.Instance == nil) then
        self.Instance = o
    end
    return self.Instance
end

---------------------------------------
function PreViewLoading:OnCreate()
    local pro = self.ComUi:GetChild("Progress")
    if (pro ~= nil) then
        self.GProgressBar = pro.asProgress
        self.GProgressBar.max = 100
        self.GProgressBar.value = 0
    end

    local text = self.ComUi:GetChild("Tips")
    if (text ~= nil) then
        self.GTextFieldTips = text.asTextField
    end

    self.OnFinished = nil

    local com_bg = self.ComUi:GetChild("ComBg")
    local bg = com_bg:GetChild("Bg")
    self:MakeUiBgFiteScreen(1066, 640, self.ComUi.width, self.ComUi.height, bg.width, bg.height, bg, 2, { self.HolderMote })

    local image_mote = com_bg:GetChild("ImageMote").asImage

    if (self.ShowSpine) then
        image_mote.visible = false

        local loadingmarry_anim = nil
        if (self.CasinosContext.PathMgr.DirLaunchAbType == CS.Casinos.DirType.Raw) then
            local ab_path_prefix = self.CasinosContext.PathMgr.DirAbRoot .. 'Spine/'
            loadingmarry_anim = self.CasinosContext.SpineMgr:CreateSpineObjFromAb(ab_path_prefix, 'LoadingMarry', 'Mary_Loading.atlas', 'Mary_Loading', 'Mary_LoadingJson', 'Spine/Skeleton')
        else
            local res_prefix = 'Resources.KingTexasLaunch/LoadingMarry/'
            loadingmarry_anim = self.CasinosContext.SpineMgr:CreateSpineObjFromRes(res_prefix, 'Mary_Loading.atlas', 'Mary_Loading', 'Mary_LoadingJson', 'Spine/Skeleton')
        end

        loadingmarry_anim.transform.localScale = CS.Casinos.LuaHelper.GetVector3(70, 70, 1000)
        loadingmarry_anim:Initialize(false)
        loadingmarry_anim.loop = true
        loadingmarry_anim.AnimationName = "animation"
        loadingmarry_anim.transform.gameObject.name = "LoadingMote"
        local loadingmarry_render = loadingmarry_anim.transform.gameObject:GetComponent("MeshRenderer")
        loadingmarry_render.sortingOrder = 4

        local loadingmarry_holder = self.ComUi:GetChild("HolderMote").asGraph
        loadingmarry_holder:SetNativeObject(CS.FairyGUI.GoWrapper(loadingmarry_anim.transform.gameObject))
    else
        image_mote.visible = true
    end

    local denglong_anim = nil
    if (self.CasinosContext.PathMgr.DirLaunchAbType == CS.Casinos.DirType.Raw) then
        local ab_path_prefix = self.CasinosContext.PathMgr.DirAbRoot .. 'Spine/'
        denglong_anim = self.CasinosContext.SpineMgr:CreateSpineObjFromAb(ab_path_prefix, 'DengLong', 'denglong.atlas', 'denglong', 'denglongJson', 'Spine/Skeleton')
    else
        local res_prefix = 'Resources.KingTexasLaunch/DengLong/'
        denglong_anim = self.CasinosContext.SpineMgr:CreateSpineObjFromRes(res_prefix, 'denglong.atlas', 'denglong', 'denglongJson', 'Spine/Skeleton')
    end

    local denglong_parent = self.ComUi:GetChild("DengLongParent").asCom
    denglong_anim.transform.parent = denglong_parent.displayObject.gameObject.transform
    denglong_anim.transform.localPosition = CS.Casinos.LuaHelper.GetVector3(-10, -90, -318)
    denglong_anim.transform.localScale = CS.Casinos.LuaHelper.GetVector3(90, 90, 90)
    denglong_anim.transform.gameObject.layer = denglong_parent.displayObject.gameObject.layer
    denglong_anim:Initialize(false)
    denglong_anim.loop = true
    denglong_anim.transform.gameObject.name = "DengLong"
    denglong_anim.AnimationName = "animation"
    local denglong_render = denglong_anim.transform.gameObject:GetComponent("MeshRenderer")
    denglong_render.sortingOrder = 4

    self:_initVersionInfo()
end

---------------------------------------
function PreViewLoading:OnDestroy()
    self.CasinosContext = nil
    self.Instance = nil
end

---------------------------------------
function PreViewLoading:OnHandleEv(ev)
end

---------------------------------------
-- 更新进度条上方提示文字
function PreViewLoading:UpdateDesc(desc)
    self.GTextFieldTips.text = desc
end

---------------------------------------
-- 更新进度条
function PreViewLoading:UpdateLoadingProgress(value, max)
    self.GProgressBar.visible = true
    self.GProgressBar.value = value
    self.GProgressBar.max = max
end

---------------------------------------
-- 左上角显示版本信息
function PreViewLoading:_initVersionInfo()
    local gtext_version = self.ComUi:GetChild("Version")
    if (gtext_version ~= nil) then
        local version_text = gtext_version.asTextField
        local app_version = "应用版本"
        local data_versionex = "数据版本"
        local lan = CurrentLan
        if (lan == "English") then
            app_version = "AppVersion"
            data_versionex = "DataVersion"
        else
            if (lan == "Chinese" or lan == "ChineseSimplified") then
                app_version = "应用版本"
                data_versionex = "数据版本"
            end
        end

        local version_bundle = self.CasinosContext.Config.VersionBundle
        local version_data = self.CasinosContext.Config.VersionDataPersistent
        if (version_data == nil) then
            version_data = ' '
        end
        version_text.text = string.format("%s: %s,  %s: %s %s", app_version, version_bundle, data_versionex, version_data, self.Launch.LaunchCfg.Env)
    end
end

---------------------------------------
-- 全屏背景屏幕适配
function PreViewLoading:MakeUiBgFiteScreen(design_width, design_height, logic_width, logic_height, image_width, image_height, obj, anchor_mode, t_anchor_point)
    local w = logic_width / design_width
    local h = logic_height / design_height
    if (w >= h) then
        obj.width = logic_width
        obj.height = logic_width * image_height / image_width
        obj.x = 0
        local y = 0
        if anchor_mode == 1 then
            y = 0
            if t_anchor_point ~= nil then
                for i, v in pairs(t_anchor_point) do
                    local p = v.xy
                    local p_y = p.y
                    local p_p = CS.Casinos.LuaHelper.GetVector2(p.x, p_y - p_y / 2 * w)
                    v.xy = p_p
                end
            end
        elseif anchor_mode == 2 then
            y = (logic_height - obj.height) / 2
            if t_anchor_point ~= nil then
                for i, v in pairs(t_anchor_point) do
                    local p = v.xy
                    local p_y = p.y
                    local p_p = CS.Casinos.LuaHelper.GetVector2(p.x, p_y + p_y / 2 * (w - h) / 2)
                    v.xy = p_p
                end
            end
        elseif anchor_mode == 3 then
            y = logic_height - obj.height
            if t_anchor_point ~= nil then
                for i, v in pairs(t_anchor_point) do
                    local p = v.xy
                    local p_y = p.y
                    local p_p = CS.Casinos.LuaHelper.GetVector2(p.x, p_y + p_y / 2 * w)
                    v.xy = p_p
                end
            end
        end
        obj.y = y
    else
        obj.height = logic_height
        obj.width = logic_height * image_width / image_height
        obj.x = (logic_width - obj.width) / 2
        obj.y = 0
        if t_anchor_point ~= nil then
            for i, v in pairs(t_anchor_point) do
                local p = v.xy
                local p_y = p.y
                local p_p = CS.Casinos.LuaHelper.GetVector2(p.x, p_y + p_y / 2 * (h - w) / 2)
                v.xy = p_p
            end
        end
    end
end

---------------------------------------
PreViewLoadingFactory = PreViewFactory:new()

---------------------------------------
function PreViewLoadingFactory:new(o, ui_package_name, ui_component_name, ui_layer, is_single, fit_screen)
    o = o or {}
    setmetatable(o, self)
    self.__index = self
    self.PackageName = ui_package_name
    self.ComponentName = ui_component_name
    self.UILayer = ui_layer
    self.IsSingle = is_single
    self.FitScreen = fit_screen
    return o
end

---------------------------------------
function PreViewLoadingFactory:CreateView()
    local view = PreViewLoading:new(nil)
    return view
end

--CS.FairyGUI.Timers.inst:Remove(loading._updateTips)
--CS.FairyGUI.Timers.inst:Add(0, 0, self._updateTips)
--CS.FairyGUI.Timers.inst.Remove(loading._playProgress)
--CS.FairyGUI.Timers.inst:Add(0.01, 0, loading._playProgress)
--if (self.ShowSPine) then
--    CS.UnityEngine.GameObject.Destroy(self.PlayerAnim.transform.gameObject)
--end
--CS.UnityEngine.GameObject.Destroy(self.DengLongAnim.transform.gameObject)
--if (self.IsAuto == true) then
--    --CS.FairyGUI.Timers.inst:Remove(self._playProgress)
--end
--CS.FairyGUI.Timers.inst:Remove(self._updateTips)