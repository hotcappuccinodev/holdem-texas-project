
// 读取VersionLaunchStreamingAssets
//var mb_helper = Config.GoMain.GetComponent<MbHelper>();
//var datafilelist_path = PathMgr.combineWWWStreamingAssetsPath("StreamingAssetsInfo.json");
//Debug.Log("4444444444");
//mb_helper.WWWDownload(datafilelist_path,
//    (w) =>
//    {
//        Debug.Log("555555555555");

//        //Config.StreamingAssetsInfo = Newtonsoft.Json.JsonConvert.DeserializeObject<StreamingAssetsInfo>(w.text);
//        Config.StreamingAssetsInfo = JsonUtility.FromJson<StreamingAssetsInfo>(w.text);

//        // 比较Launch版本，决定是否将Launch从StreamingAssets拷贝到Persistent
//        bool need_copy = false;
//        if (string.IsNullOrEmpty(Config.VersionLaunchPersistent)
//            || Config.VersionLaunchPersistent != Config.StreamingAssetsInfo.DataVersion)
//        {
//            need_copy = true;
//        }

//        // 将Launch从StreamingAssets拷贝到Persistent
//        if (need_copy)
//        {
//            var l = Config.StreamingAssetsInfo.ListLaunchFile;
//            Dictionary<string, string> map_copyfile = new Dictionary<string, string>(l.Count);
//            foreach (var i in l)
//            {
//                var path_www_streamingassets_file = PathMgr.combineWWWStreamingAssetsPath(i);
//                map_copyfile[path_www_streamingassets_file] = i;
//            }
//            Debug.Log("6666666666666");
//            mb_helper.WWWDownloadList(new List<string>(map_copyfile.Keys),
//                (arr) =>
//                {
//                    Debug.Log("777777777777");
//                    foreach (var www in arr)
//                    {
//                        string path_www_streamingassets_file = map_copyfile[www.url];
//                        var str = PathMgr.combinePersistentDataPath(path_www_streamingassets_file);
//                        string d = Path.GetDirectoryName(str);
//                        if (!Directory.Exists(d))
//                        {
//                            Directory.CreateDirectory(d);
//                        }

//                        using (FileStream fs = new FileStream(str, FileMode.Create))
//                        {
//                            fs.Write(www.bytes, 0, www.bytes.Length);
//                        }
//                    }

//                    Debug.Log("8888888888888");

//                    Config.WriteVersionLaunchPersistent(Config.StreamingAssetsInfo.DataVersion);

//                    CasinosLua.Launch();
//                });
//        }
//        else
//        {
//            CasinosLua.Launch();
//        }
//    });

//---------------------------------------------------------------------
//public static string GetMaJiangCardResName(CardData card_data)
//{
//    string card_res_name = "";
//    MaJiangSuit majiang_suit = (MaJiangSuit)card_data.suit;
//    if (majiang_suit != MaJiangSuit.Wan && majiang_suit != MaJiangSuit.Tong
//        && majiang_suit != MaJiangSuit.Tiao)
//    {
//        card_res_name = majiang_suit.ToString();
//    }
//    else
//    {
//        MaJiangType majiang_type = (MaJiangType)card_data.type;
//        card_res_name = majiang_type.ToString() + majiang_suit.ToString();
//    }

//    return card_res_name;
//}

//---------------------------------------------------------------------
//public static void setParticle(GComponent g, string particle_resouce_path)
//{
//    var particle_parent = g.GetChild("ParticleParent").asGraph;
//    GameObject particle = (GameObject)GameObject.Instantiate(Resources.Load(particle_resouce_path));
//    particle_parent.SetNativeObject(new GoWrapper(particle));
//}

//---------------------------------------------------------------------
//public static void SetCommonBgParticle(GComponent co_commonbg)
//{
//    var particleblue_parent = co_commonbg.GetChild("ParticleBlue").asGraph;
//    SetParticle(particleblue_parent, "Particle/StarBlue");
//    //var particleyellow_parent = co_commonbg.GetChild("ParticleYellow").asGraph;
//    //GameObject yellow = (GameObject)GameObject.Instantiate(Resources.Load("Particle/StarYellow"));
//    //particleyellow_parent.SetNativeObject(new GoWrapper(yellow));
//    var particleyellowright_parent = co_commonbg.GetChild("ParticleYellowRight").asGraph;
//    SetParticle(particleyellowright_parent, "Particle/StarYellowRight");
//}

//---------------------------------------------------------------------
//public static void SetLoadingBgParticle(GComponent co_commonbg)
//{
//    var particleblue_parent = co_commonbg.GetChild("ParticleTop").asGraph;
//    SetParticle(particleblue_parent, "Particle/Star");
//    var particleyellow_parent = co_commonbg.GetChild("ParticleLeft").asGraph;
//    SetParticle(particleyellow_parent, "Particle/Star");
//    var particleyellowright_parent = co_commonbg.GetChild("ParticleRight").asGraph;
//    SetParticle(particleyellowright_parent, "Particle/Star");
//}

//---------------------------------------------------------------------
//public static void SetParticle(GGraph graph, string particle_name)
//{
//    GameObject particle = (GameObject)GameObject.Instantiate(Resources.Load(particle_name));
//    graph.SetNativeObject(new GoWrapper(particle));
//}